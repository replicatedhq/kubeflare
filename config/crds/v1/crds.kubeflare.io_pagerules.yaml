
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: pagerules.crds.kubeflare.io
spec:
  group: crds.kubeflare.io
  names:
    kind: PageRule
    listKind: PageRuleList
    plural: pagerules
    singular: pagerule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PageRule is the Schema for the pagerules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PageRuleSpec defines the desired state of PageRule
            properties:
              pageRule:
                properties:
                  alwaysUseHttps:
                    type: object
                  autoMinify:
                    properties:
                      css:
                        type: boolean
                      html:
                        type: boolean
                      js:
                        type: boolean
                    required:
                    - css
                    - html
                    - js
                    type: object
                  enabled:
                    type: boolean
                  forwardingUrl:
                    properties:
                      redirectUrl:
                        type: string
                      statusCode:
                        type: integer
                    required:
                    - redirectUrl
                    - statusCode
                    type: object
                  hostHeaderOverride:
                    properties:
                      value:
                        type: string
                    required:
                    - value
                    type: object
                  priority:
                    type: integer
                  requestUrl:
                    type: string
                  resolveOverride:
                    properties:
                      value:
                        type: string
                    required:
                    - value
                    type: object
                required:
                - requestUrl
                type: object
              zone:
                type: string
            required:
            - zone
            type: object
          status:
            description: PageRuleStatus defines the observed state of PageRule We
              are storing the requested priority here because the priority is different
              on cloudflare side and hence we cannot depend on the one from its API
              to detect changes to the spec
            properties:
              id:
                type: string
              lastAppliedPriority:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
